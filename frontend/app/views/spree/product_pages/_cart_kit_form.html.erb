<% unless Rails.env.production? %>
  <a href="<%= spree.edit_admin_product_variant_url(product.permalink,variant.id) %>">goto admin</a>
<% end %>

<% if variant.level %>
  <p class="level">Level <span><%= variant.level %></span></p>
<% end %>

<%= form_for :order, :url => populate_orders_path do |f| %>

  <%= hidden_field_tag "products[target_id]", target_id %>

<div class="product-price prices" data-hook="product_price">
  <% if variant.has_price? %>
    <span class="<%=variant.normal_price_classes %>" data-price="<%= variant.price.in_subunit %>" data-currency="<%= variant.currency_symbol %>"> 
    <%= variant.price_html %>
  </span>
  <span class="<%= variant.sale_price_classes %>" data-price="<%= variant.sale_price.in_subunit %>" data-currency="<%= variant.currency_symbol %>">
    <%= variant.sale_price_html %>
  </span>
<% end %>
</div>

<div data-hook="inside_product_cart_form" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
  <div class="required-parts">
    <% product.assembly_definitions.where(optional: false).each do |assembly_definition|%>
      <% product_part = assembly_definition.part.decorate(context: @context) %>
    <div class="product-variants" data-tree="<%= product_part.memoized_variant_options_tree.to_json  %>" >

      <h5> <%= assembly_definition.count %> x <%= product_part.name %> </h5>

      <% product_part.memoized_targeted_grouped_option_values.each do |type, values|  %>
        <div class="variant-options <%= type.url_safe_name.downcase %>" data-type=<%= type.url_safe_name.downcase %> > 

        <h5 class="variant-option-type"><%= type.presentation %>
        <span class="color-value"></span>
        </h5>

        <ul class="variant-option-values <%= type.url_safe_name.downcase %>">
          <% values.sort_by(&:position).each do |value| %>
            <% classes = ["option-value", value.url_safe_name, type.url_safe_name] %>
          <li>
          <%= link_to value.has_image? ? image_tag(value.image.url, :alt => value.presentation) : content_tag(:span, value.presentation), "#", :title => value.presentation, :class => classes.join(" "), data: {type: type.url_safe_name, value: value.url_safe_name, presentation: value.presentation } %>
          </li>
        <% end %>
        </ul>
      </div>
      <div class="product-part-image hide">
          <%= image_tag(product_part.variants.first.images.first.attachment.url(:mini)) %>		
      </div>
      <input class="selected-parts" type="hidden" name="parts[<%= assembly_definition.id %>][]" value="" />
    </div>
  <% end %>
  <% end %>
  </div>

  <div class="optional-parts">
    <% product.assembly_definitions.where(optional: true).each do |assembly_definition|%>
      <% product_part = assembly_definition.part.decorate(context: @context) %>
      <div class="optional-part">
        <h5 class="product-section-title">Do you need <%= product_part.name %>?</h5>
        <%= check_box_tag "parts[#{assembly_definition.id}][]", product_part.variants.first.id, false, 'class' => "selected-parts", 'data-price' => product_part.price_in_pence(product_part, current_currency), 'data-currency' => current_currency %>
        <label for="<%= ['products', 'options', product_part.id].join('_') %>">
          <span class="optional-part-label"><%= "#{assembly_definition.count} X #{product_part.name}" %></span>
        </label>
        <div class="product-part-image hide">
          <%= image_tag(product_part.variants.first.images.first.attachment.url(:mini)) %>		
        </div>
      </div>
    <% end %>
  </div>

</div>

<% if product.price and !product.price.nil? %>
  <div class="add-to-cart">
  <label>Quantity</label>
  <%= number_field_tag (product.memoized_targeted_grouped_option_values.any? ? :quantity : "variants[#{product.master.id}]"), 1, :id => 'qty', :min => 1 %>
  <%= button_tag :class => 'add-to-cart-button small', :type => :submit do %>
    <%= Spree.t(:add_to_cart) %>
<% end %>
</div>
<% end %>

<% end %>
